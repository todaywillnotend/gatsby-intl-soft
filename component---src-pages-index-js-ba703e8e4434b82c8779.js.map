{"version":3,"file":"component---src-pages-index-js-ba703e8e4434b82c8779.js","mappings":"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","sources":["webpack://gatsby-intl-soft/./node_modules/classnames/index.js","webpack://gatsby-intl-soft/../src/image-utils.ts","webpack://gatsby-intl-soft/../src/components/hooks.ts","webpack://gatsby-intl-soft/../src/components/layout-wrapper.tsx","webpack://gatsby-intl-soft/../src/components/picture.tsx","webpack://gatsby-intl-soft/../src/components/placeholder.tsx","webpack://gatsby-intl-soft/../src/components/main-image.tsx","webpack://gatsby-intl-soft/../src/components/gatsby-image.server.tsx","webpack://gatsby-intl-soft/../src/components/gatsby-image.browser.tsx","webpack://gatsby-intl-soft/../src/components/static-image.server.tsx","webpack://gatsby-intl-soft/../src/components/static-image.tsx","webpack://gatsby-intl-soft/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://gatsby-intl-soft/./src/components/Logo/Logo.jsx","webpack://gatsby-intl-soft/./node_modules/react-intl/lib/src/components/useIntl.js","webpack://gatsby-intl-soft/./node_modules/react-intl/lib/src/components/message.js","webpack://gatsby-intl-soft/./src/const/navigation.js","webpack://gatsby-intl-soft/./src/components/Header/Header.jsx","webpack://gatsby-intl-soft/./src/components/Wrapper/Wrapper.jsx","webpack://gatsby-intl-soft/./src/components/Main/Main.jsx","webpack://gatsby-intl-soft/./src/components/Title/Title.jsx","webpack://gatsby-intl-soft/./src/components/Services/Services.jsx","webpack://gatsby-intl-soft/./src/components/Team/Team.jsx","webpack://gatsby-intl-soft/./src/components/Form/Form.jsx","webpack://gatsby-intl-soft/./src/components/Footer/Footer.jsx","webpack://gatsby-intl-soft/./src/pages/index.js"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n  function classNames() {\n    var classes = '';\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (arg) {\n        classes = appendClass(classes, parseValue(arg));\n      }\n    }\n    return classes;\n  }\n  function parseValue(arg) {\n    if (typeof arg === 'string' || typeof arg === 'number') {\n      return arg;\n    }\n    if (typeof arg !== 'object') {\n      return '';\n    }\n    if (Array.isArray(arg)) {\n      return classNames.apply(null, arg);\n    }\n    if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n      return arg.toString();\n    }\n    var classes = '';\n    for (var key in arg) {\n      if (hasOwn.call(arg, key) && arg[key]) {\n        classes = appendClass(classes, key);\n      }\n    }\n    return classes;\n  }\n  function appendClass(value, newClass) {\n    if (!newClass) {\n      return value;\n    }\n    if (value) {\n      return value + ' ' + newClass;\n    }\n    return value + newClass;\n  }\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React from \"react\";\n\nexport const Logo = ({ width = 120, height = 31 }) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 120 31\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_209_37945)\">\n        <path\n          d=\"M12.9912 19.1487C12.9912 19.9257 12.8084 20.5953 12.4427 21.1575C12.0936 21.7031 11.5118 22.2073 10.6972 22.6703C10.1486 23.0009 9.50862 23.2489 8.7772 23.4143C8.04578 23.5796 7.30603 23.6623 6.55798 23.6623C5.79329 23.6623 4.84576 23.4143 3.71538 22.9183C2.90084 22.5215 2.25252 22.0503 1.77045 21.5047C1.30499 20.9591 1.07227 20.3639 1.07227 19.7191C1.07227 19.2727 1.17201 18.9503 1.37149 18.7519C1.57097 18.5369 1.89512 18.4295 2.34395 18.4295C2.57668 18.4295 2.81772 18.5287 3.06707 18.7271C3.31642 18.9089 3.46603 19.0908 3.5159 19.2727C3.74863 19.9505 4.15592 20.4713 4.73772 20.8351C5.31953 21.1823 6.04264 21.3559 6.90707 21.3559C7.90447 21.3559 8.73563 21.174 9.40058 20.8103C10.0821 20.4465 10.4229 19.9588 10.4229 19.3471C10.4229 18.7519 10.0572 18.2228 9.32577 17.7599C8.59436 17.2969 7.8463 16.9745 7.08162 16.7927C5.98447 16.4951 5.01201 16.1396 4.16421 15.7263C3.28318 15.2964 2.62655 14.7673 2.19434 14.1391C1.76214 13.5108 1.54603 12.8495 1.54603 12.1551C1.54603 11.5103 1.77045 10.8572 2.21928 10.1959C2.66811 9.51803 3.20006 9.03028 3.81512 8.73268C4.14758 8.56734 4.71279 8.39374 5.51071 8.21189C6.32527 8.01349 6.91537 7.91429 7.2811 7.91429C7.76316 7.91429 8.29514 7.97214 8.87694 8.08789C9.45875 8.20363 9.93251 8.36894 10.2982 8.58389C11.0297 8.99723 11.5699 9.36923 11.919 9.69989C12.2681 10.0305 12.4427 10.4439 12.4427 10.9399C12.4427 11.2375 12.3263 11.502 12.0936 11.7335C11.8774 11.9649 11.4951 12.0807 10.9466 12.0807C10.8136 12.0807 10.6806 12.0228 10.5476 11.9071C10.4146 11.7913 10.2484 11.6177 10.0489 11.3863C9.7829 11.0391 9.52525 10.8076 9.2759 10.6919C9.02655 10.6092 8.66082 10.5183 8.17876 10.4191C7.71329 10.3199 7.29773 10.2703 6.93201 10.2703C6.53304 10.2703 6.11745 10.3529 5.68525 10.5183C5.25306 10.6836 4.88733 10.9233 4.58811 11.2375C4.30553 11.5351 4.16421 11.8823 4.16421 12.2791C4.16421 12.6097 4.31382 12.8991 4.61304 13.1471C4.9289 13.3785 5.30293 13.5687 5.73512 13.7175C6.23382 13.9159 6.7741 14.0895 7.3559 14.2383C8.12059 14.4697 8.74397 14.6847 9.22603 14.8831C9.72473 15.0649 10.2068 15.2964 10.6723 15.5775C11.4868 16.0569 12.0769 16.5529 12.4427 17.0655C12.8084 17.5615 12.9912 18.2559 12.9912 19.1487ZM22.6541 7.86469C23.7679 7.86469 24.7819 8.00523 25.6962 8.28629C26.6105 8.55083 27.3586 8.94763 27.9404 9.47668C28.9877 10.4191 29.7191 11.4524 30.1347 12.5767C30.5669 13.6844 30.783 15.1063 30.783 16.8423C30.783 17.206 30.7331 17.5367 30.6334 17.8343C30.5503 18.1319 30.409 18.5121 30.2095 18.9751C29.9601 19.4876 29.8105 19.8927 29.7606 20.1903C29.4282 20.7689 28.8796 21.3228 28.1149 21.8519C27.3669 22.3809 26.5523 22.8108 25.6713 23.1415C24.7903 23.4721 24.0173 23.6375 23.3523 23.6375C20.144 23.6375 17.8583 22.5463 16.4952 20.3639C16.1129 19.7521 15.8136 19.1156 15.5975 18.4543C15.398 17.7929 15.2983 17.1481 15.2983 16.5199C15.2983 14.8335 15.5975 13.3703 16.196 12.1303C16.811 10.8737 17.6588 9.89829 18.7393 9.20389C19.3877 8.82363 20.0609 8.50949 20.7591 8.26149C21.4739 7.99694 22.1056 7.86469 22.6541 7.86469ZM17.8916 16.5943C17.8916 17.4871 18.091 18.2228 18.49 18.8015C18.9056 19.3801 19.5373 20.0084 20.3851 20.6863C21.0832 20.9508 21.557 21.1244 21.8064 21.2071C22.0557 21.2732 22.3383 21.3063 22.6541 21.3063C24.3331 21.3063 25.6713 20.8516 26.6687 19.9423C27.6661 19.0329 28.1648 17.7847 28.1648 16.1975C28.1648 14.9409 28.0235 13.9489 27.7409 13.2215C27.4583 12.494 26.9513 11.8409 26.2199 11.2623C25.8375 10.9481 25.3471 10.7167 24.7487 10.5679C24.1669 10.4191 23.5352 10.3447 22.8536 10.3447C21.823 10.3447 20.9336 10.6505 20.1856 11.2623C19.4375 11.8575 18.864 12.6345 18.4651 13.5935C18.0827 14.5524 17.8916 15.5527 17.8916 16.5943ZM35.0371 23.7119C34.6548 23.7119 34.3639 23.6127 34.1644 23.4143C33.9649 23.1993 33.8652 22.9844 33.8652 22.7695C33.9649 22.1743 34.0231 21.5377 34.0397 20.8599C34.0564 20.182 34.0647 19.7769 34.0647 19.6447V18.7519C34.0647 18.074 34.0564 17.4788 34.0397 16.9663C34.0231 16.4372 34.0065 15.9908 33.9899 15.6271C33.9234 14.1721 33.8901 13.0396 33.8901 12.2295V11.4607C33.9234 10.6671 33.9649 9.97269 34.0148 9.37749C34.0314 9.14603 34.1727 8.89803 34.4387 8.63349C34.7213 8.36894 35.1036 8.20363 35.5857 8.13749C37.1649 7.97214 39.1267 7.88949 41.4706 7.88949H42.2685C42.8502 7.88949 43.4237 7.99694 43.989 8.21189C44.5707 8.42683 44.8617 8.79054 44.8617 9.30308C44.8617 9.65029 44.7784 9.93134 44.6124 10.1463C44.446 10.3447 44.1219 10.4439 43.6399 10.4439C43.4237 10.4439 43.1743 10.4273 42.8919 10.3943C42.609 10.3612 42.4095 10.3364 42.2934 10.3199C41.6615 10.2207 41.1714 10.1711 40.8223 10.1711C38.8938 10.1711 37.4309 10.3033 36.4335 10.5679V11.9319V14.7839C37.5639 14.7839 38.7442 14.7343 39.9745 14.6351C40.8721 14.5689 41.4538 14.5359 41.7199 14.5359C42.1021 14.5359 42.4263 14.6268 42.6924 14.8087C42.9749 14.974 43.1163 15.2303 43.1163 15.5775C43.1163 16.4372 42.526 16.8671 41.3459 16.8671C41.063 16.8671 40.6391 16.9001 40.0742 16.9663C39.4423 17.0324 38.9519 17.0655 38.6028 17.0655C38.3867 17.0655 38.0792 17.0489 37.6803 17.0159C37.1649 16.9828 36.8158 16.9745 36.633 16.9911C36.6163 17.4209 36.6247 18.0905 36.6579 18.9999L36.6828 20.6615C36.6828 21.2236 36.6746 21.6452 36.6579 21.9263C36.6413 22.1908 36.5914 22.4801 36.5083 22.7943C36.4584 23.0588 36.3088 23.282 36.0595 23.4639C35.8101 23.6292 35.4693 23.7119 35.0371 23.7119ZM45.2502 9.17909C45.2502 8.46814 45.7738 8.11269 46.8211 8.11269C47.2699 8.11269 48.1259 8.12923 49.3894 8.16228C50.7858 8.22843 51.8412 8.26149 52.5562 8.26149C53.1378 8.26149 53.8442 8.22843 54.6756 8.16228C55.2406 8.12923 55.5982 8.11269 55.7478 8.11269C56.6619 8.14574 57.4349 8.31109 58.0668 8.60869C58.2495 8.69134 58.3991 8.79054 58.5156 8.90628C58.6317 9.02203 58.6902 9.21214 58.6902 9.47668C58.6902 9.84043 58.5737 10.1545 58.3411 10.4191C58.1081 10.6671 57.8256 10.7911 57.4933 10.7911C57.1275 10.7911 56.5956 10.7415 55.8975 10.6423C55.2823 10.5265 54.7419 10.4687 54.2767 10.4687C53.8278 10.4687 53.4869 10.4769 53.2543 10.4935C53.2045 11.0391 53.1795 12.3452 53.1795 14.4119C53.1795 16.8753 53.2543 19.3719 53.404 21.9015L53.4538 22.6207C53.4538 23.2985 53.063 23.6375 52.2819 23.6375C51.6667 23.6375 51.251 23.4969 51.0351 23.2159C50.8189 22.9183 50.711 22.4719 50.711 21.8767C50.711 20.7028 50.6775 19.2396 50.6112 17.4871C50.5446 16.0321 50.5115 14.9988 50.5115 14.3871C50.5115 13.9737 50.5614 12.7089 50.6611 10.5927L47.7437 10.6175C46.8125 10.6175 46.1642 10.5348 45.7984 10.3695C45.4329 10.1876 45.2502 9.79083 45.2502 9.17909Z\"\n          fill=\"black\"\n        />\n        <g filter=\"url(#filter0_d_209_37945)\">\n          <path\n            d=\"M61.5586 5.81249C61.5586 4.52843 62.6051 3.48749 63.8963 3.48749H116.104C117.395 3.48749 118.442 4.52843 118.442 5.81249V14.88V25.575C118.442 26.859 117.395 27.9 116.104 27.9H63.8963C62.6051 27.9 61.5586 26.859 61.5586 25.575V5.81249Z\"\n            fill=\"white\"\n          />\n          <path\n            d=\"M63.8958 4.06873H116.104C117.072 4.06873 117.857 4.84942 117.857 5.81248V14.88V25.575C117.857 26.538 117.072 27.3187 116.104 27.3187H63.8958C62.9276 27.3187 62.1426 26.538 62.1426 25.575V5.81248C62.1426 4.84942 62.9276 4.06873 63.8958 4.06873Z\"\n            stroke=\"#05549E\"\n            strokeWidth=\"3\"\n          />\n        </g>\n        <path\n          d=\"M70.4856 9.94791C70.4358 11.0061 70.4108 12.0229 70.4108 12.9983C70.4108 14.0069 70.4775 15.4866 70.6103 17.4375C70.6271 17.7351 70.6602 18.3386 70.7101 19.2479C70.7599 20.1407 70.7849 20.9591 70.7849 21.7031C70.9512 21.6866 71.1258 21.6618 71.3085 21.6287C71.508 21.5957 71.6576 21.5791 71.7573 21.5791C72.1232 21.5791 72.4138 21.6701 72.6301 21.8519C72.8463 22.0338 72.9542 22.3149 72.9542 22.6951C72.9542 22.9431 72.8545 23.1333 72.655 23.2655C72.4555 23.3978 72.1064 23.497 71.6077 23.5631C71.1258 23.6127 70.419 23.6375 69.4882 23.6375C68.4577 23.6375 67.6847 23.6045 67.1693 23.5383C66.6538 23.4722 66.2965 23.3482 66.0971 23.1663C65.8976 22.9679 65.7979 22.6786 65.7979 22.2983C65.7979 22.0173 65.8894 21.8271 66.0721 21.7279C66.2549 21.6287 66.5128 21.5791 66.8451 21.5791L67.3688 21.6039L68.1916 21.6535L68.0669 18.7271C67.9672 17.1399 67.9173 15.685 67.9173 14.3623C67.9173 13.6514 67.9423 12.6759 67.9921 11.4359L68.042 10.0719C67.4767 10.105 67.0364 10.1215 66.7204 10.1215C66.3546 10.1215 66.1053 10.0554 65.9724 9.92311C65.8559 9.79085 65.7979 9.51805 65.7979 9.10471C65.7979 8.64176 66.1138 8.34416 66.7454 8.21191C67.3937 8.07965 68.3743 8.01351 69.6877 8.01351C70.7019 8.01351 71.4581 8.04656 71.9568 8.11271C72.4723 8.17885 72.7298 8.32765 72.7298 8.55911C72.7298 9.12125 72.6051 9.49325 72.3558 9.67511C72.1232 9.84045 71.6658 9.92311 70.9843 9.92311L70.4856 9.94791ZM111.35 9.69991C111.35 9.22045 111.458 8.80711 111.674 8.45991C111.907 8.09616 112.248 7.91431 112.697 7.91431C113.079 7.91431 113.42 7.98871 113.719 8.13751C114.018 8.28631 114.168 8.53431 114.168 8.88151C114.168 9.55936 114.134 10.5101 114.068 11.7335C114.002 12.9239 113.969 13.8085 113.969 14.3871C113.969 15.2965 114.002 16.5117 114.068 18.0327C114.134 19.4877 114.168 20.5541 114.168 21.2319C114.168 21.7775 114.159 22.1826 114.143 22.4471C114.143 22.7117 113.993 22.9762 113.694 23.2407C113.411 23.4887 112.971 23.6127 112.373 23.6127C112.057 23.6127 111.782 23.5631 111.55 23.4639C111.334 23.3482 111.184 23.2242 111.101 23.0919C110.319 22.1495 109.181 20.5458 107.685 18.2807C106.006 15.7511 104.634 13.8167 103.571 12.4775C103.703 13.6679 103.77 15.1229 103.77 16.8423C103.77 17.6029 103.753 18.5949 103.72 19.8183C103.703 21.0253 103.67 21.8189 103.62 22.1991C103.554 22.6786 103.404 23.0506 103.172 23.3151C102.955 23.5631 102.606 23.6871 102.124 23.6871C101.759 23.6871 101.484 23.5879 101.301 23.3895C101.135 23.1746 101.035 22.8109 101.002 22.2983C100.986 21.6205 101.027 20.6037 101.127 19.2479C101.143 19.033 101.168 18.661 101.202 18.1319C101.235 17.6029 101.252 17.1317 101.252 16.7183C101.252 15.5775 101.193 14.2714 101.077 12.7999C100.977 11.1797 100.927 9.98096 100.927 9.20391C100.927 8.80711 101.069 8.50125 101.351 8.28631C101.651 8.07136 101.991 7.96391 102.374 7.96391C102.706 7.96391 103.055 8.04656 103.421 8.21191C104.85 9.99751 106.787 12.6594 109.231 16.1975L111.575 19.7687C111.591 19.5042 111.6 19.1322 111.6 18.6527C111.6 17.8095 111.583 16.9002 111.55 15.9247C111.516 14.9493 111.491 14.2879 111.475 13.9407C111.392 12.337 111.35 10.9234 111.35 9.69991Z\"\n          fill=\"black\"\n        />\n        <path\n          d=\"M81.7824 10.5927C81.616 13.8333 81.5331 16.4125 81.5331 18.3303C81.5331 19.3223 81.558 20.2647 81.6079 21.1575C81.7407 21.2567 81.9986 21.3063 82.3808 21.3063L82.9543 21.2815C83.1869 21.2485 83.4032 21.2319 83.6027 21.2319C84.0347 21.2319 84.3675 21.3063 84.6001 21.4551C84.8494 21.6039 84.9741 21.8933 84.9741 22.3231C84.9741 22.7365 84.8494 23.0589 84.6001 23.2903C84.3675 23.5218 83.877 23.6375 83.1289 23.6375C82.4973 23.6375 81.7325 23.5879 80.8349 23.4887C80.6186 23.4722 80.411 23.4557 80.2115 23.4391C80.012 23.4226 79.8293 23.4143 79.6629 23.4143C78.7485 23.4309 78.0671 23.4639 77.6182 23.5135C77.1694 23.5631 76.6625 23.5879 76.0972 23.5879C75.5818 23.5879 75.3242 23.1994 75.3242 22.4223C75.3242 21.6783 75.8062 21.3063 76.7705 21.3063C76.9201 21.3063 77.1612 21.3229 77.4936 21.3559C77.776 21.4055 78.0753 21.4303 78.3912 21.4303C78.574 21.4303 78.7236 21.4221 78.8401 21.4055C78.8568 20.2978 78.9149 18.6858 79.0146 16.5695C79.1143 14.0895 79.1642 12.2543 79.1642 11.0639C79.0812 11.0805 78.7902 11.1962 78.2915 11.4111C77.5267 11.7914 76.9618 11.9815 76.5959 11.9815C76.3964 11.9815 76.2137 11.8823 76.0473 11.6839C75.881 11.469 75.798 11.221 75.798 10.9399C75.798 10.6589 75.9725 10.3861 76.3216 10.1215C76.6707 9.85696 77.236 9.50976 78.0172 9.07991C78.4493 8.86496 78.865 8.62526 79.264 8.36071C79.3637 8.29456 79.5051 8.22846 79.6879 8.16231C79.8873 8.09616 80.0369 8.06311 80.1367 8.06311C80.5688 8.06311 80.9595 8.15406 81.3086 8.33591C81.6745 8.50126 81.8572 8.72446 81.8572 9.00551L81.7824 10.5927ZM93.399 13.7175C94.7619 14.0151 95.8925 14.6021 96.7902 15.4783C97.6879 16.3546 98.1363 17.3714 98.1363 18.5287C98.1363 19.2231 97.9703 19.901 97.638 20.5623C97.1058 21.6205 96.3079 22.4141 95.2442 22.9431C94.1969 23.4722 92.9833 23.7367 91.6037 23.7367C90.7392 23.7367 89.9662 23.5797 89.2847 23.2655C88.6029 22.9349 87.9297 22.4967 87.265 21.9511C87.0156 21.7197 86.7912 21.389 86.5918 20.9591C86.4086 20.5293 86.3175 20.1738 86.3175 19.8927C86.3175 19.529 86.4172 19.2397 86.6167 19.0247C86.8325 18.7933 87.1154 18.6775 87.4645 18.6775C87.8136 18.6775 88.0879 18.7602 88.2873 18.9255C88.4868 19.0909 88.7276 19.3554 89.0105 19.7191C89.2762 20.0663 89.5173 20.3474 89.7336 20.5623C89.9494 20.7607 90.2405 20.9343 90.6063 21.0831C90.9717 21.2319 91.4292 21.3063 91.9777 21.3063C93.0912 21.3063 93.964 21.0335 94.5959 20.4879C95.2275 19.9423 95.5434 19.1735 95.5434 18.1815C95.5434 17.8013 95.3354 17.421 94.9201 17.0407C94.5043 16.6439 94.1136 16.3629 93.7481 16.1975C93.5319 16.0818 93.1329 15.9661 92.5512 15.8503C91.7697 15.6519 91.1798 15.4618 90.7808 15.2799C90.3982 15.0815 90.2073 14.7757 90.2073 14.3623C90.2073 14.0813 90.332 13.8085 90.5814 13.5439C90.8307 13.2629 91.2047 12.9157 91.7034 12.5023C92.2021 12.089 92.5762 11.7501 92.8255 11.4855C93.0749 11.2045 93.1995 10.9234 93.1995 10.6423C92.8836 10.5597 92.4098 10.5183 91.7779 10.5183C91.4954 10.5183 91.0715 10.5349 90.5066 10.5679C90.0079 10.601 89.6253 10.6175 89.3595 10.6175C88.7611 10.6175 88.2456 10.5183 87.8136 10.3199C87.3979 10.1215 87.1898 9.86526 87.1898 9.55111C87.1898 9.20391 87.2233 8.93111 87.2899 8.73271C87.3562 8.51776 87.4808 8.38551 87.664 8.33591C87.7801 8.28631 87.9881 8.26151 88.2873 8.26151C89.1016 8.26151 89.8084 8.28631 90.4068 8.33591C91.0715 8.36896 91.5788 8.38551 91.9279 8.38551L93.9975 8.36071C95.6931 8.36071 96.5408 8.76576 96.5408 9.57591C96.5408 10.1877 96.2249 10.8821 95.5933 11.6591C94.9781 12.4197 94.2468 13.1058 93.399 13.7175Z\"\n          fill=\"#05549E\"\n        />\n      </g>\n      <defs>\n        <filter\n          id=\"filter0_d_209_37945\"\n          x=\"56.6426\"\n          y=\"2.56873\"\n          width=\"66.7139\"\n          height=\"34.25\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n            result=\"hardAlpha\"\n          />\n          <feOffset dy=\"4\" />\n          <feGaussianBlur stdDeviation=\"2\" />\n          <feComposite in2=\"hardAlpha\" operator=\"out\" />\n          <feColorMatrix\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"\n          />\n          <feBlend\n            mode=\"normal\"\n            in2=\"BackgroundImageFix\"\n            result=\"effect1_dropShadow_209_37945\"\n          />\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_209_37945\"\n            result=\"shape\"\n          />\n        </filter>\n        <clipPath id=\"clip0_209_37945\">\n          <rect width=\"120\" height=\"31\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n  var intl = React.useContext(Context);\n  invariantIntlContext(intl);\n  return intl;\n}","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n  var values = prevProps.values,\n    otherProps = __rest(prevProps, [\"values\"]);\n  var nextValues = nextProps.values,\n    nextOtherProps = __rest(nextProps, [\"values\"]);\n  return shallowEqual(nextValues, values) && shallowEqual(otherProps, nextOtherProps);\n}\nfunction FormattedMessage(props) {\n  var intl = useIntl();\n  var formatMessage = intl.formatMessage,\n    _a = intl.textComponent,\n    Text = _a === void 0 ? React.Fragment : _a;\n  var id = props.id,\n    description = props.description,\n    defaultMessage = props.defaultMessage,\n    values = props.values,\n    children = props.children,\n    _b = props.tagName,\n    Component = _b === void 0 ? Text : _b,\n    ignoreTag = props.ignoreTag;\n  var descriptor = {\n    id: id,\n    description: description,\n    defaultMessage: defaultMessage\n  };\n  var nodes = formatMessage(descriptor, values, {\n    ignoreTag: ignoreTag\n  });\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n  if (typeof children === 'function') {\n    return children(nodes);\n  }\n  if (Component) {\n    return React.createElement(Component, null, React.Children.toArray(nodes));\n  }\n  return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;","export const navigationItems = {\n  SERVICES: \"services\",\n  TEAM: \"team\",\n  CONTACTS: \"contacts\",\n};\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport cn from \"classnames\";\nimport Link from \"gatsby-link\";\n\nimport { Logo } from \"../Logo/Logo\";\nimport { navigationItems } from \"../../const\";\n\nimport \"./Header.scss\";\n\nconst getHref = (id) => `#${id}`;\n\nfunction scrollTo(element) {\n  window?.scroll({\n    behavior: \"smooth\",\n    left: 0,\n    top: element.offsetTop,\n  });\n}\n\nexport const Header = ({ language }) => {\n  const handleLanguageChange = () => {\n    switch (language) {\n      case \"ru\":\n        window.location.replace(\"/en\");\n        break;\n      case \"en\":\n        window.location.replace(\"/\");\n        break;\n    }\n  };\n\n  const buttonHandler = (id) => {\n    const block = document.getElementById(id);\n\n    if (block) {\n      scrollTo(block);\n    }\n  };\n\n  return (\n    <header className=\"header\">\n      <div className=\"logo\">\n        <Logo width={100} height={26} />\n      </div>\n      <nav className=\"navigation\">\n        <ul>\n          <li>\n            <a\n              href={getHref(navigationItems.SERVICES)}\n              onClick={(event) => {\n                event.preventDefault();\n                buttonHandler(navigationItems.SERVICES);\n              }}\n            >\n              <FormattedMessage id=\"navigation-1\" defaultMessage=\"Услуги\" />\n            </a>\n          </li>\n          <li>\n            <a\n              href={getHref(navigationItems.TEAM)}\n              onClick={(event) => {\n                event.preventDefault();\n                buttonHandler(navigationItems.TEAM);\n              }}\n            >\n              <FormattedMessage id=\"navigation-2\" defaultMessage=\"Команда\" />\n            </a>\n          </li>\n          <li>\n            <a\n              href={getHref(navigationItems.CONTACTS)}\n              onClick={(event) => {\n                event.preventDefault();\n                buttonHandler(navigationItems.CONTACTS);\n              }}\n            >\n              <FormattedMessage id=\"navigation-3\" defaultMessage=\"Контакты\" />\n            </a>\n          </li>\n        </ul>\n      </nav>\n      <div className=\"language-toggle\">\n        <Link\n          to=\"/\"\n          className={cn(\"language-toggle__option\", {\n            \"language-toggle__option_active\": language == \"ru\",\n          })}\n        >\n          <p>Рус</p>\n        </Link>\n        <Link\n          to=\"/en\"\n          className={cn(\"language-toggle__option\", {\n            \"language-toggle__option_active\": language == \"en\",\n          })}\n        >\n          <p>Eng</p>\n        </Link>\n      </div>\n    </header>\n  );\n};\n","import React from \"react\";\n\nimport \"./Wrapper.scss\";\n\nexport const Wrapper = ({ children }) => {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"content\">{children}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nimport \"./Main.scss\";\n\nexport const Main = () => {\n  return (\n    <section className=\"main\">\n      <h1 className=\"main__title\">\n        <FormattedMessage\n          id=\"main-title-1\"\n          defaultMessage=\"Консалтинг в области\"\n        />\n        <div className=\"main__title_blue\">\n          <FormattedMessage\n            id=\"main-title-2\"\n            defaultMessage=\"больших данных и машинного обучения\"\n          />\n        </div>\n      </h1>\n      <div className=\"business\">\n        <div className=\"business__image\">\n          <StaticImage src=\"../../images/main.png\" width={490} height={370} />\n        </div>\n        <div className=\"business__content\">\n          <p className=\"business__title\">\n            <FormattedMessage\n              id=\"business-title\"\n              defaultMessage=\"Помогаем бизнесу\"\n            />\n          </p>\n          <ul className=\"business__list\">\n            <li className=\"business__item\">\n              <FormattedMessage\n                id=\"business-item-1\"\n                defaultMessage=\"Увеличивать доход\"\n              />\n            </li>\n            <li className=\"business__item\">\n              <FormattedMessage\n                id=\"business-item-2\"\n                defaultMessage=\"Эффективно принимать решения\"\n              />\n            </li>\n            <li className=\"business__item\">\n              <FormattedMessage\n                id=\"business-item-3\"\n                defaultMessage=\"Лучше\n              понимать клиентов\"\n              />\n            </li>\n            <li className=\"business__item\">\n              <FormattedMessage\n                id=\"business-item-4\"\n                defaultMessage=\"Предотвращать фрод\"\n              />\n            </li>\n            <li className=\"business__item\">\n              <FormattedMessage\n                id=\"business-item-5\"\n                defaultMessage=\"Оптимизировать операционку\"\n              />\n            </li>\n          </ul>\n          <p className=\"business__other\">\n            <FormattedMessage id=\"business-and\" defaultMessage=\"и\" />{\" \"}\n            <span className=\"business__other_underline\">\n              <FormattedMessage\n                id=\"business-other\"\n                defaultMessage=\"многое\n              другое c использованием ML и Big Data\"\n              />\n            </span>\n          </p>\n        </div>\n      </div>\n      <div className=\"goal\">\n        <p className=\"goal__title\">\n          {\"# \"}\n          <span className=\"goal__title_blue\">\n            <FormattedMessage\n              id=\"goal-title-1\"\n              defaultMessage=\"Рост вашего бизнеса\"\n            />\n          </span>{\" \"}\n          <FormattedMessage\n            id=\"goal-title-2\"\n            defaultMessage=\"- наша ключевая задача\"\n          />\n        </p>\n        <p className=\"goal__desc\">\n          <FormattedMessage\n            id=\"goal-desc\"\n            defaultMessage=\"Мы исходим от потребностей бизнеса,\n            предлагаем те решения, которые действительно помогут клиенту,\n            а не просто модные инструменты\"\n          />\n        </p>\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\n\nimport \"./Title.scss\";\n\nexport const Title = ({ text }) => {\n  return <h1 className=\"title\">{text}</h1>;\n};\n","import React from \"react\";\n\nimport { Title } from \"../Title/Title\";\nimport { useIntl } from \"react-intl\";\nimport { navigationItems } from \"../../const\";\n\nimport \"./Services.scss\";\n\nconst getServices = (intl) => [\n  {\n    title: intl.formatMessage({\n      id: \"service-item-1-title\",\n      defaultMessage: \"Аналитика\",\n    }),\n    items: [\n      intl.formatMessage({\n        id: \"service-item-1-text-1\",\n        defaultMessage:\n          \"Разработка платформы для автоматизации процесса работы с A/B-тестами\",\n      }),\n      intl.formatMessage({\n        id: \"service-item-1-text-2\",\n        defaultMessage: \"Оптимизация и разработка метрик\",\n      }),\n      intl.formatMessage({\n        id: \"service-item-1-text-3\",\n        defaultMessage: \"Построение иерархии метрик\",\n      }),\n      intl.formatMessage({\n        id: \"service-item-1-text-4\",\n        defaultMessage: \"Разработка ETL-процессов\",\n      }),\n      intl.formatMessage({\n        id: \"service-item-1-text-5\",\n        defaultMessage: \"Система дашбордов\",\n      }),\n    ],\n  },\n  {\n    title: intl.formatMessage({\n      id: \"service-item-2-title\",\n      defaultMessage: \"Базы данных\",\n    }),\n    items: [\n      intl.formatMessage({\n        id: \"service-item-2-text-1\",\n        defaultMessage: \"Внедрение современных решений\",\n      }),\n      intl.formatMessage({\n        id: \"service-item-2-text-2\",\n        defaultMessage: \"Миграция с одной базы данных на другую\",\n      }),\n      intl.formatMessage({\n        id: \"service-item-2-text-3\",\n        defaultMessage: \"Оптимизация взаимодействия с базой данных\",\n      }),\n      intl.formatMessage({\n        id: \"service-item-2-text-4\",\n        defaultMessage: \"Повышения надежности взаимодействия с базой данных\",\n      }),\n      intl.formatMessage({\n        id: \"service-item-2-text-5\",\n        defaultMessage: \"Улучшение наблюдаемости за базой данных\",\n      }),\n    ],\n  },\n  {\n    title: intl.formatMessage({\n      id: \"service-item-3-title\",\n      defaultMessage: \"Машинное обучение\",\n    }),\n    items: [\n      intl.formatMessage({\n        id: \"service-item-3-text-1\",\n        defaultMessage:\n          \"Интеграция моделей в существующую инфраструктуру и бизнес-процессы\",\n      }),\n      intl.formatMessage({\n        id: \"service-item-3-text-2\",\n        defaultMessage: \"Решение ваших задач с использованием NLP, CV\",\n      }),\n      intl.formatMessage({\n        id: \"service-item-3-text-3\",\n        defaultMessage: \"Оптимизация существующих моделей и алгоритмов\",\n      }),\n      intl.formatMessage({\n        id: \"service-item-3-text-4\",\n        defaultMessage:\n          \"Персонализация предложений, продуктов или услуг с использованием моделей\",\n      }),\n      intl.formatMessage({\n        id: \"service-item-3-text-5\",\n        defaultMessage:\n          \"Проведение технического аудита текущих решений на основе машинного обучения\",\n      }),\n    ],\n  },\n];\n\nexport const Services = () => {\n  const intl = useIntl();\n  const serviceItems = getServices(intl);\n\n  return (\n    <section className=\"service\" id={navigationItems.SERVICES}>\n      <Title\n        text={intl.formatMessage({\n          id: \"services-title\",\n          defaultMessage: \"Наши ключевые компетенции\",\n        })}\n      />\n      <div className=\"service__items\">\n        {serviceItems.map((service) => (\n          <div className=\"service-item\">\n            <p className=\"service-item__title\">{service.title}</p>\n\n            <div className=\"service-item__text\">\n              {service.items.map((item) => (\n                <p>\n                  {\"— \"}\n                  {item}\n                </p>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nimport { Title } from \"../Title/Title\";\nimport { useIntl } from \"react-intl\";\nimport { navigationItems } from \"../../const\";\n\nimport \"./Team.scss\";\n\nconst getPersons = (intl) => [\n  {\n    name: intl.formatMessage({\n      id: \"person-1-name\",\n      defaultMessage: \"Чемурзиев Умар\",\n    }),\n    text: intl.formatMessage({\n      id: \"person-1-text\",\n      defaultMessage: `Senior product analyst\\n\n            Raiffeisen bank, ex Tinkoff`,\n    }),\n    image: <StaticImage src=\"../../images/photo1.jpg\" />,\n  },\n  {\n    name: intl.formatMessage({\n      id: \"person-2-name\",\n      defaultMessage: \"Гитинов Наби\",\n    }),\n    text: intl.formatMessage({\n      id: \"person-2-text\",\n      defaultMessage: `Backend developer\n      ex Yandex`,\n    }),\n    image: <StaticImage src=\"../../images/photo2.jpg\" />,\n  },\n  {\n    name: intl.formatMessage({\n      id: \"person-3-name\",\n      defaultMessage: \"Неклюдов Андрей\",\n    }),\n    text: intl.formatMessage({\n      id: \"person-3-text\",\n      defaultMessage: `ML engineer\n      ex Glidewell`,\n    }),\n    image: <StaticImage src=\"../../images/photo3.jpg\" />,\n  },\n];\n\nexport const Team = () => {\n  const intl = useIntl();\n  const persons = getPersons(intl);\n\n  return (\n    <section className=\"team\" id={navigationItems.TEAM}>\n      <Title\n        text={intl.formatMessage({\n          id: \"team-title\",\n          defaultMessage: \"Команда\",\n        })}\n      />\n      <div className=\"team__content\">\n        {persons.map((person) => (\n          <div className=\"person\">\n            <div className=\"person__image\">{person.image}</div>\n            <p className=\"person__name\">{person.name}</p>\n            <p className=\"person__text\">{person.text}</p>\n          </div>\n        ))}\n      </div>\n      <p className=\"team__description\">\n        {intl.formatMessage({\n          id: \"team-description\",\n          defaultMessage:\n            \"Наши сотрудники закончили топ ВУЗы и поработали в ведущих технологических компаниях\",\n        })}\n      </p>\n    </section>\n  );\n};\n","import React, { useState } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport cn from \"classnames\";\nimport { navigationItems } from \"../../const\";\n\nimport \"./Form.scss\";\n\nconst initialFormData = {\n  name: \"\",\n  contact: \"\",\n  message: \"\",\n};\n\nexport const Form = () => {\n  const intl = useIntl();\n\n  const [formData, setFormData] = useState(initialFormData);\n\n  const isButtonEnabled = Boolean(formData.contact);\n\n  const successMessage = intl.formatMessage({\n    id: \"form-success\",\n    defaultMessage:\n      \"Спасибо за ваше обращение! Мы получили ваше сообщение и свяжемся с вами в ближайшее время.\",\n  });\n\n  const errorMessage = intl.formatMessage({\n    id: \"form-error\",\n    defaultMessage:\n      \"Что-то пошло не так, попробуйте еще раз немного позже или свяжитесь другим удобным способом.\",\n  });\n\n  const onSubmitForm = async (event) => {\n    event.preventDefault();\n\n    try {\n      // Тут делаем запрос\n      // const url = \"\";\n      // await fetch(url, {\n      //   method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      //   mode: \"cors\", // no-cors, *cors, same-origin\n      //   cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      //   credentials: \"same-origin\", // include, *same-origin, omit\n      //   headers: {\n      //     \"Content-Type\": \"application/json\",\n      //     // 'Content-Type': 'application/x-www-form-urlencoded',\n      //   },\n      //   redirect: \"follow\", // manual, *follow, error\n      //   referrerPolicy: \"no-referrer\", // no-referrer, *client\n      //   body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n      // });\n\n      alert(successMessage);\n      setFormData(initialFormData);\n    } catch (error) {\n      console.error(error);\n      alert(errorMessage);\n    }\n  };\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={onSubmitForm}\n      id={navigationItems.CONTACTS}\n    >\n      <p className=\"form__title\">\n        <span className=\"form__title_blue\">\n          <FormattedMessage id=\"form-title-1\" defaultMessage=\"Напишите нам\" />\n        </span>{\" \"}\n        <FormattedMessage\n          id=\"form-title-2\"\n          defaultMessage=\"о своих идеях или вопросах, и мы скоро свяжемся с вами!\"\n        />\n      </p>\n      <div className=\"form__content\">\n        <input\n          value={formData.name}\n          type=\"text\"\n          className=\"form__input\"\n          placeholder={intl.formatMessage({\n            id: \"form-name-placeholder\",\n            defaultMessage: \"Имя\",\n          })}\n          onChange={(event) =>\n            setFormData((prev) => ({\n              ...prev,\n              name: event?.target?.value || \"\",\n            }))\n          }\n        />\n        <input\n          value={formData.contact}\n          type=\"text\"\n          className=\"form__input\"\n          placeholder={intl.formatMessage({\n            id: \"form-contact-placeholder\",\n            defaultMessage: \"e-mail / telegram / номер телефона\",\n          })}\n          onChange={(event) =>\n            setFormData((prev) => ({\n              ...prev,\n              contact: event?.target?.value || \"\",\n            }))\n          }\n        />\n        <textarea\n          value={formData.message}\n          className=\"form__textarea\"\n          placeholder={intl.formatMessage({\n            id: \"form-message-placeholder\",\n            defaultMessage: \"Ваше сообщение\",\n          })}\n          onChange={(event) =>\n            setFormData((prev) => ({\n              ...prev,\n              message: event?.target?.value || \"\",\n            }))\n          }\n        />\n        <button\n          className={cn(\"form__button\", {\n            form__button_active: isButtonEnabled,\n          })}\n          type=\"submit\"\n        >\n          <FormattedMessage id=\"form-button\" defaultMessage=\"Отправить\" />\n        </button>\n      </div>\n      <div className=\"form__social\">\n        <a className=\"social\" href=\"mailto:sales@softin.ru\" target=\"__blank\">\n          <StaticImage src=\"../../images/icon-mail.png\" width={40} />\n          sales@softin.ru\n        </a>\n        <a className=\"social\" href=\"https://t.me/softi13n\" target=\"__blank\">\n          <StaticImage src=\"../../images/icon-tg.png\" width={40} />\n          t.me/softi13n\n        </a>\n        <a className=\"social\" href=\"https://wa.me/\" target=\"__blank\">\n          <StaticImage src=\"../../images/icon-wa.png\" width={40} />\n          +7 (999) 999 99 99\n        </a>\n      </div>\n    </form>\n  );\n};\n","import React from \"react\";\n\nimport { Logo } from \"../Logo/Logo\";\n\nimport \"./Footer.scss\";\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"logo\">\n        <Logo />\n      </div>\n    </footer>\n  );\n};\n","import React from \"react\";\nimport SimpleLocalize from \"../SimpleLocalize\";\nimport {\n  Header,\n  Wrapper,\n  Main,\n  Services,\n  Team,\n  Form,\n  Footer,\n} from \"../components/\";\n\nfunction IndexPage(props) {\n  const language = props.pageContext.language;\n\n  return (\n    <SimpleLocalize {...props}>\n      <Wrapper>\n        <Header language={language} />\n        <Main />\n        <Services />\n        <Team />\n        <Form />\n        <Footer />\n      </Wrapper>\n    </SimpleLocalize>\n  );\n}\n\nexport default IndexPage;\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","key","call","value","newClass","module","exports","default","W","hasNativeLazyLoadSupport","HTMLImageElement","z","e","t","a","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","map","_ref6","media","type","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","replace","ae","_len","_key","c","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","preserveCamelCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","lastIndex","m1","charAt","postProcess","_","identifier","Logo","_ref","React","viewBox","fill","xmlns","clipPath","stroke","strokeWidth","id","filterUnits","colorInterpolationFilters","floodOpacity","result","in","values","dy","stdDeviation","in2","operator","mode","useIntl","intl","FormattedMessage","props","formatMessage","_a","textComponent","Text","description","defaultMessage","_b","tagName","Component","nodes","ignoreTag","toArray","MemoizedFormattedMessage","prevProps","nextProps","otherProps","nextValues","nextOtherProps","navigationItems","getHref","Header","language","buttonHandler","block","document","getElementById","element","_window","window","scroll","behavior","offsetTop","href","onClick","event","preventDefault","Link","to","cn","Wrapper","Main","StaticImage","require","Title","text","Services","serviceItems","title","items","getServices","service","item","Team","persons","name","getPersons","person","initialFormData","contact","message","Form","formData","setFormData","useState","isButtonEnabled","Boolean","successMessage","errorMessage","onSubmit","async","alert","error","onChange","prev","_event$target","target","_event$target2","_event$target3","form__button_active","Footer","pageContext","SimpleLocalize"],"sourceRoot":""}